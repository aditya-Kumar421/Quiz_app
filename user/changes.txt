#Working
***************************admin.py:*********************************
from django.contrib import admin
from django.contrib.auth.models import User
from .serializers import UserSerializer

class UserAdmin(admin.ModelAdmin):
    list_display = ('username', 'email', 'first_name', 'last_name')
    actions = ['create_users_from_serializer']

    def create_users_from_serializer(self, request, queryset):
        for user_data in queryset:
            serializer = UserSerializer(data={
                'username': user_data.username,
                'email': user_data.email,
                'password': user_data.password,
                'first_name': user_data.first_name,
                'last_name': user_data.last_name
            })
            if serializer.is_valid():
                serializer.save()
                self.message_user(request, "Users created successfully")
            else:
                self.message_user(request, "Invalid data. Users not created.", level=admin.ERROR)
    create_users_from_serializer.short_description = "Create Users from Serializer"

# Register the User model with the custom UserAdmin
admin.site.unregister(User)
admin.site.register(User, UserAdmin)


*************************Serializers:*************************
from rest_framework import serializers
from django.contrib.auth.models import User

class UserSerializer(serializers.ModelSerializer):
    class Meta:
        model = User
        fields = ('id', 'username', 'email', 'password', 'first_name', 'last_name')
        extra_kwargs = {'password': {'write_only': True}}

    def create(self, validated_data):
        user = User.objects.create_user(**validated_data)
        return user

*******************************Views:**************************************
from rest_framework import status
from rest_framework.response import Response
from rest_framework.views import APIView
from rest_framework.authtoken.models import Token
from rest_framework.permissions import IsAuthenticated

from django.contrib.auth import authenticate, login, logout

from .serializers import UserSerializer


class RegisterUserView(APIView):
    def post(self, request):
        serializer = UserSerializer(data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
#ERROR: Invalid credential in all cases

class LoginUserView(APIView):
    def post(self, request):
            email = request.data.get('email')
            password = request.data.get('password')
            user = authenticate(request, username=email, password=password)
            if user is not None:
                login(request, user)
                token, created = Token.objects.get_or_create(user=user)
                return Response({'token': token.key}, status=status.HTTP_200_OK)
            return Response({'error': 'Invalid credentials'}, status=status.HTTP_401_UNAUTHORIZED)

class LogoutUserView(APIView):
    def post(self, request):
        logout(request)
        return Response({'message': 'Logged out successfully'}, status=status.HTTP_200_OK)

class UserProfileView(APIView):
    serializer_class = UserSerializer
    permission_classes = (IsAuthenticated)

    def get_object(self):
        return self.request.user.userprofile